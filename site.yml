---
- hosts: all
  become: yes
  vars:
    ansible_user: admuser
    ansible_python_interpreter: /usr/bin/python3
    nginx_conf: |
      upstream app {
         server app1;
         server app2;
      }
      
      server {
         listen 80;
      
         location / {
             proxy_pass http://app;
         }
      }
    index_page: |
      <html><body><b>
      <p>Hello</p>
      <p>{{hostname}}</p>
      </b></body></html>

  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: dist
        update_cache: yes

    - name: Install system packages
      apt:
        pkg: "{{item}}"
        state: latest
      loop:
        - gpg
        - curl
        - python3-pip
        - gnupg-agent
        - ca-certificates
        - apt-transport-https
        - software-properties-common

    - name: Add Docker GPG apt Key
      apt_key:
        url: "https://download.docker.com/linux/debian/gpg"
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ansible_distribution_release}} stable"
        state: present

    - name: Update cache once again
      apt:
        update_cache: yes
        cache_valid_time: 86400

    - name: Install Docker packages
      apt:
        pkg: "docker-ce"
        state: latest

    - name: Install pip module for Docker
      pip:
        name: docker

    - name: Write nginx config
      copy:
        content: "{{nginx_conf}}"
        dest: "/opt/nginx.conf"
        
    - name: Write index pages
      vars:
        hostname: "app{{item}}"
      copy:
        content: "{{ index_page }}"
        dest: "/opt/index-{{item}}.html"
      loop:
        - 1
        - 2

    - name: Start PostreSQL container
      docker_container:
        name: "postres"
        restart_policy: "always"
        image: postgres:alpine
        exposed_ports:
          - "5432"
        env:
          POSTGRES_PASSWORD: "P@ssw0rd"

    - name: Start 2 apache containers
      docker_container:
        name: "apache-{{item}}"
        restart_policy: "always"
        image: httpd:alpine
        links:
          - "postres:psql"
        exposed_ports:
          - "80"
        volumes:
          - "/opt/index-{{item}}.html:/usr/local/apache2/htdocs/index.html"
      loop:
        - 1
        - 2

    - name: Start nginx container
      docker_container:
        name: "nginx"
        restart_policy: "always"
        image: nginx:alpine
        links:
          - "apache-1:app1"
          - "apache-2:app2"
        ports:
          - "7810:80"
        volumes:
          - "/opt/nginx.conf:/etc/nginx/conf.d/default.conf"
